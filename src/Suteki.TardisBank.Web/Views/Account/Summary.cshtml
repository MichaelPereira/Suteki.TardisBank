@model AccountSummaryViewModel

@{
    Layout = "~/Views/Shared/SiteLayout.cshtml";
	var accountSummary = String.Format(Suteki.TardisBank.Web.Lang.FormatAccountSummary, Model.Child.Name);
}

<h2>@accountSummary</h2>

<div class="grid_8 rightline">
    <p>@Suteki.TardisBank.Web.Lang.CurrentBalance: <strong>@Model.Child.Account.Balance.ToString("c")</strong></p>

    <h3>@Suteki.TardisBank.Web.Lang.PocketMoneySchedule</h3>
    @if(Model.Child.Account.PaymentSchedules.Count == 0) {
    <p>@Suteki.TardisBank.Web.Lang.NoPocketMoneySchedule</p>
    } else {
    <table>
        <thead>
            <tr>
                <th>@Suteki.TardisBank.Web.Lang.Due</th>
                <th>@Suteki.TardisBank.Web.Lang.Interval</th>
                <th>@Suteki.TardisBank.Web.Lang.Description</th>
                <th class="money">@Suteki.TardisBank.Web.Lang.Amount</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
    @foreach(var schedule in Model.Child.Account.PaymentSchedules) {
        <tbody>
            <tr>
                <td>@schedule.NextRun.ToShortDateString()</td>
                <td>@schedule.Interval</td>
                <td>@schedule.Description</td>
                <td class="money">@schedule.Amount.ToString("c")</td>
                @if(Model.IsParentView) {
                <td>@Html.ActionLink(Suteki.TardisBank.Web.Lang.Delete, "RemoveSchedule", "Schedule", new { id = Model.Child.Id, scheduleId = schedule.Id }, new { @class = "warning" })</td>
                }else{
                <td>&nbsp;</td>
                }
            </tr>
        </tbody>
    }
    </table>
    }

    <h3>@Suteki.TardisBank.Web.Lang.Transactions</h3>
    @if(Model.Child.Account.Transactions.Count == 0) {
    <p>@Suteki.TardisBank.Web.Lang.NoTransactions</p>
    } else {
    <table>
        <thead>
            <tr>
                <th>@Suteki.TardisBank.Web.Lang.Date</th>
                <th>@Suteki.TardisBank.Web.Lang.Description</th>
                <th class="money">@Suteki.TardisBank.Web.Lang.Amount</th>
            </tr>
        </thead>
    @foreach(var transaction in Model.Child.Account.Transactions.Reverse()) {
        <tbody>
            <tr>
                <td>@transaction.Date.ToShortDateString()</td>
                <td>@transaction.Description</td>
                <td class="money">@transaction.Amount.ToString("c")</td>
            </tr>
        </tbody>
    }
    </table>
    <p>(Note: we only show you the last @Account.MaxTransactions transactions)</p>
    }
</div>

<div class="grid_3">
    @if(Model.IsParentView) {
		<p>To make a payment into your child's bank account:</p>
        <div>@Html.ActionLink(Suteki.TardisBank.Web.Lang.MakeAPayment, "MakePayment", "Account", new { id = Model.Child.Id }, null)</div>
        <div>&nbsp;</div>
		<p>To hand some cash to your child, or buy something on their behalf:</p>
		<div>@Html.ActionLink("Withdraw Cash", "WithdrawCashForChild", "Account", new { id = Model.Child.Id }, null)</div>
        <div>&nbsp;</div>
		<p>To set up a pocket money payment schedule:</p>
        <div>@Html.ActionLink(Suteki.TardisBank.Web.Lang.SetUpSchedule, "AddSchedule", "Schedule", new { id = Model.Child.Id }, null)</div>
    } else {
        <div>@Html.ActionLink(Suteki.TardisBank.Web.Lang.WithdrawCash, "WithdrawCash", "Account")</div>
    }
</div>